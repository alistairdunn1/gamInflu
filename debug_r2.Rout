
R version 4.4.1 (2024-06-14 ucrt) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Debug r2 function
> library(gamInflu)
> library(mgcv)
Loading required package: nlme
This is mgcv 1.9-3. For overview type 'help("mgcv-package")'.
Warning message:
package 'mgcv' was built under R version 4.4.3 
> 
> set.seed(123)
> n <- 100
> test_data <- data.frame(
+   year = factor(rep(2015:2019, each = 20)),
+   x = rnorm(n),
+   y = rnorm(n)
+ )
> 
> model <- gam(y ~ s(x) + year, data = test_data, family = gaussian())
> gi <- calculate_influence(gam_influence(model, focus = "year", data = test_data))
Detected model family: gaussian with link: identity
Using family: gaussian
Response 'y' appears to be on original scale, setting islog = FALSE
Auto-selected rescaling method: arithmetic_mean (based on family: gaussian, islog: FALSE)
Using coefficient-based CI calculation
> 
> cat("Class of gi:\n")
Class of gi:
> print(class(gi))
[1] "gam_influence"
> 
> cat("\nCalling r2(gi):\n")

Calling r2(gi):
> r2_result <- r2(gi)
> cat("Class of r2_result:\n")
Class of r2_result:
> print(class(r2_result))
[1] "data.frame"
> cat("Structure of r2_result:\n")
Structure of r2_result:
> print(str(r2_result))
'data.frame':	3 obs. of  12 variables:
 $ term                   : chr  "Intercept" "s(x)" "year"
 $ logLike                : num  -138 -138 -136
 $ aic                    : num  280 282 287
 $ r_sq                   : num  0 -0.00704 -0.01758
 $ deviance_explained     : num  0 0.00378 0.03459
 $ df                     : num  0 1.06 4.01
 $ smooth_edf             : num  0 1.0631 0.0125
 $ smooth_edf_cum         : num  0 1.06 1.08
 $ r_sq_diff              : num  0 -0.00704 -0.01055
 $ deviance_explained_diff: num  0 0.00378 0.03081
 $ overall                : num  NA 0.00449 NA
 $ trend                  : num  NA -0.00118 NA
NULL
> cat("Value of r2_result:\n")
Value of r2_result:
> print(r2_result)
       term   logLike      aic         r_sq deviance_explained       df smooth_edf
1 Intercept -138.0343 280.0685  0.000000000        0.000000000 0.000000 0.00000000
2      s(x) -137.8450 281.8162 -0.007036062        0.003777664 1.063079 1.06307894
3      year -136.2744 286.6998 -0.017583811        0.034585716 4.012457 0.01245693
  smooth_edf_cum    r_sq_diff deviance_explained_diff     overall        trend
1       0.000000  0.000000000             0.000000000          NA           NA
2       1.063079 -0.007036062             0.003777664 0.004487505 -0.001178296
3       1.075536 -0.010547749             0.030808052          NA           NA
> 
> proc.time()
   user  system elapsed 
   0.62    0.09    0.68 
