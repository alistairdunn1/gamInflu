% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/box_cox_transform.R
\name{box_cox_transform}
\alias{box_cox_transform}
\title{Box-Cox Transform a Response Variable}
\usage{
box_cox_transform(y, lambda = NULL, lower = -2, upper = 2, eps = 0)
}
\arguments{
\item{y}{Numeric vector. The response variable to transform.}

\item{lambda}{Numeric or NULL. The Box-Cox transformation parameter.
If NULL (default), the optimal lambda is estimated from the data.
Common values include:
\itemize{
  \item 1: No transformation (y)
  \item 0: Log transformation (log(y))
  \item 0.5: Square root transformation (sqrt(y))
  \item -1: Reciprocal transformation (1/y)
}}

\item{lower}{Numeric. Lower bound for lambda search (default: -2).}

\item{upper}{Numeric. Upper bound for lambda search (default: 2).}

\item{eps}{Numeric. Small value added to y to ensure strictly positive values (default: 0).}
}
\value{
A list containing:
  \itemize{
    \item transformed: The transformed response variable
    \item lambda: The lambda value used (estimated or specified)
    \item original: The original response variable
    \item eps: The epsilon value added to the data (if any)
  }
}
\description{
Apply a Box-Cox transformation to a response variable for use in GAMs,
  automatically estimating the optimal lambda parameter or using a specified value.
  The Box-Cox transformation can help normalize data and stabilize variance.
}
\details{
The Box-Cox transformation is defined as:
\deqn{y^{(\lambda)} = \begin{cases}
  \frac{y^\lambda - 1}{\lambda} & \text{if } \lambda \neq 0 \\
  \log(y) & \text{if } \lambda = 0
\end{cases}}

When the original data contains zeros or negative values, a small epsilon value
should be added to make all values positive before transformation.
}
\examples{
\dontrun{
# Automatically estimate optimal lambda
bc_transform <- box_cox_transform(data$response)
transformed_y <- bc_transform$transformed

# Use log transformation (lambda = 0)
bc_log <- box_cox_transform(data$response, lambda = 0)

# Square root transformation (lambda = 0.5)
bc_sqrt <- box_cox_transform(data$response, lambda = 0.5)

# Add small epsilon to handle zeros in data
bc_transform_eps <- box_cox_transform(data$response, eps = 0.01)
}
}
