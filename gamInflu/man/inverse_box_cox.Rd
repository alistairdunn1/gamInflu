% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/box_cox_transform.R
\name{inverse_box_cox}
\alias{inverse_box_cox}
\title{Inverse Box-Cox Transform}
\usage{
inverse_box_cox(x, lambda, eps = 0)
}
\arguments{
\item{x}{Numeric vector. The Box-Cox transformed values.}

\item{lambda}{Numeric. The Box-Cox transformation parameter used.}

\item{eps}{Numeric. The epsilon value added to the original data before transformation (default: 0).}
}
\value{
Numeric vector with values converted back to the original scale.
}
\description{
Convert transformed values back to the original scale using the inverse Box-Cox transformation.
}
\details{
The inverse Box-Cox transformation is defined as:
\deqn{y = \begin{cases}
  (\lambda x + 1)^{1/\lambda} & \text{if } \lambda \neq 0 \\
  \exp(x) & \text{if } \lambda = 0
\end{cases}}

If an epsilon was added to the original data, it will be subtracted after the inverse transformation.
}
\examples{
\dontrun{
# Transform data
bc_transform <- box_cox_transform(data$response)

# Fit model on transformed data
mod <- gam(bc_transform$transformed ~ s(x), data = data)

# Generate predictions on transformed scale
pred_transformed <- predict(mod, newdata = new_data)

# Convert predictions back to original scale
pred_original <- inverse_box_cox(pred_transformed,
  lambda = bc_transform$lambda,
  eps = bc_transform$eps
)
}

}
