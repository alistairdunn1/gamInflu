% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_gam_effects.r
\name{plot_gam_effects}
\alias{plot_gam_effects}
\title{Plot Model Effects for GAM}
\usage{
plot_gam_effects(
  model,
  data,
  terms = NULL,
  n_points = 100,
  show_rug = FALSE,
  show_ci = TRUE,
  ci_level = 0.95,
  plot_as_grid = TRUE,
  smooth_method = "predict",
  ncol = 2,
  verbose = TRUE,
  re_style = "panel",
  interactive = FALSE,
  predict_all = TRUE
)
}
\arguments{
\item{model}{A fitted GAM object (from mgcv::gam)}

\item{data}{The data frame used to fit the model}

\item{terms}{Character vector of terms to plot. If NULL (default), plots all terms}

\item{n_points}{Number of points to use for continuous variables}

\item{show_rug}{Logical. Whether to show rug plots for continuous variables}

\item{show_ci}{Logical. Whether to show confidence intervals}

\item{ci_level}{Confidence level (0-1)}

\item{plot_as_grid}{Logical. Whether to arrange plots in a grid (TRUE) or return a list of plots (FALSE)}

\item{smooth_method}{Method for smooth terms. Options: "predict" (uses predict.gam) or "plot_smooth" (uses plot.gam)}

\item{ncol}{Number of columns in the grid (if plot_as_grid=TRUE)}

\item{verbose}{Logical. Print progress messages?}

\item{re_style}{Style for random effects plots. Options: "panel" (default), "qqnorm", "caterpillar", "shrinkage", "combined"}

\item{interactive}{Logical. Whether to create interactive plots using plotly (if available)}

\item{predict_all}{Logical. Whether to predict for all terms even if not visualized}
}
\value{
A grid of plots (if plot_as_grid=TRUE) or a list of ggplot objects
}
\description{
Creates plots showing the effect of each predictor in a GAM model while holding
other variables at their median/mode/reference level. For random effects,
includes specialized visualizations showing the distribution and properties
of the random effect estimates.
}
\examples{
\dontrun{
library(mgcv)
data(mtcars)
m <- gam(mpg ~ s(wt) + s(hp) + s(cyl, bs = "re"), data = mtcars)
plot_gam_effects(m, mtcars)
plot_gam_effects(m, mtcars, re_style = "qqnorm")
plot_gam_effects(m, mtcars, re_style = "caterpillar")
}
}
