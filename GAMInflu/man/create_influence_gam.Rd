% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_influence_gam.r
\name{create_influence_gam}
\alias{create_influence_gam}
\title{Create an influence_gam Object}
\usage{
create_influence_gam(
  gam_model,
  data = NULL,
  focus = NULL,
  response = NULL,
  islog = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{gam_model}{A fitted GAM object (from `mgcv::gam`).}

\item{data}{The data frame used to fit the model. Essential if not stored in the gam_model object.
Ensure variable types (especially factors) are correct *before* fitting the model.}

\item{focus}{The name (character string) of the focus term (predictor variable)
for which influence is to be calculated. This term must be present in the model.
It can be a factor, numeric, or involved in smooths/interactions.}

\item{response}{Optional. The name (character string) of the response variable.
If NULL, it will be inferred from the gam_model formula.}

\item{islog}{Logical. Indicates if the response variable is log-transformed.
This is used for inverse link function calculations.}

\item{verbose}{Logical. Print messages during initialization?}
}
\value{
An object of class `influence_gam`.
}
\description{
Initializes an object for performing influence analysis on a GAM model.
}
\examples{
\dontrun{
# Example usage (requires data and a fitted gam model)
set.seed(123)
dat <- gamSim(1, n = 200, dist = "normal", scale = 2)
dat$fac <- factor(sample(1:3, 200, replace = TRUE))
model <- gam(y ~ s(x0) + s(x1) + s(x2, by = fac) + fac, data = dat)
influ_obj <- create_influence_gam(model, data = dat, focus = "fac")
influ_obj <- calculate_influence(influ_obj)
plot(influ_obj, type = "stan")
plot(influ_obj, type = "step")
plot(influ_obj, type = "influ")
plot(influ_obj, type = "cdi", term = "s(x0)") # Note: CDI plot needs adaptation for smooths
}
}
